package com.example.carBackEnd;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.RestController;

@Controller
@CrossOrigin
@RequestMapping(path="/cars") // This means URL's start with /demo (after Application path)
public class CarController {
    @Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private CarRepository carRepository;

    @PostMapping(path="/add") // Map ONLY POST Requests
    public @ResponseBody String addNewCar (@RequestParam String carManu  , @RequestParam String carModel  , @RequestParam String clutch , @RequestParam Integer horsePower , @RequestParam Integer cc,
                                           @RequestParam Integer price , @RequestParam Integer rating) {
        // @ResponseBody means the returned String is the response, not a view name
        // @RequestParam means it is a parameter from the GET or POST request

        Car n = new Car();
        n.setCarManu(carManu);
        n.setCarModel(carModel);
        n.setClutch(clutch);
        n.setHorsePower(horsePower);
        n.setCc(cc);
        n.setPrice(price);
        n.setRating(rating);
        carRepository.save(n);
        return "Saved";
    }

    @GetMapping(path="/all")
    public @ResponseBody Iterable<Car> getAllCars() {
        // This returns a JSON or XML with the users
        return carRepository.findAll();
    }
}
